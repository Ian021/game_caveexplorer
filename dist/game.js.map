{"version":3,"sources":["scenario.js","resolution.js","player.js","input.js","dom.js","game.js"],"names":["Scenario","size_x","size_y","optional_parameters","check","checkInput","console","log","density","dispersion","maxPropagation","minPropagation","size","maxBlocks","Math","round","seedBlocksDensity","seedBlocks","blockLocations","blocks","gridMap","_generateMap","JSON","stringify","blankMap","Array","fill","map","row","row_index","col","col_index","rand","random","push","x","y","length","_generateSeedMap","propagation","min","max","forEach","location","neighboors","element","player","position","code","deltaTime","timestamp","moving","speed","lastMove","ctx","grid_element_size","fillStyle","fillRect","resolution","HD","GAME_WIDTH","GAME_HEIGHT","FULLHD","SQUARE","Player","health","module","InputHandler","document","addEventListener","event","keyCode","e","direction","gamePaused","window","pause","getElementsByClassName","style","backgroundColor","dom","require","scenario","sqm","positionPlayer","input","canvas","getElementById","getContext","setAttribute","lastTime","gameLoop","clearRect","movePlayer","move","draw","requestAnimationFrame"],"mappings":"AICA,IAAI0E,UAAU,GAAG,KAAjB;;AAEAC,ACAA,MDAM,CAACC,KAAP,GAAe,YAAY;AACvB,MAAIzC,CAAC,GAAGiC,QAAQ,CAACS,sBAAT,CAAgC,YAAhC,EAA8C,CAA9C,CAAR;ACAJ;ADCI,MAAIH,UAAU,KAAK,IAAnB,EAAyB;AACrBvC,ACDR,AJLO,IGMCA,AHNKuB,CGMJ,CAACoB,KAAF,CAAQC,EHNO,GAAG,UGMlB,GAA0B,WAA1B;AACAL,AHNJf,EAAAA,EGMIe,AHNF,EAAC,QGMW,GAAG,KAAb;AACH,ACFL,AJJQd,GGGJ,CHHIA,KGMG,KHNO,EAAC,IADZ;AGQCzB,AHNA0B,IGMA1B,AHNA0B,CGMC,CAACiB,KAAF,CAAQC,GHNG,EAAC,GAFb,OGQC,GAA0B,WAA1B;AACAL,ACVR,AJIQzE,IGMAyE,AHNAzE,MAAM,EAAC,EGMG,AHTX,GGSc,IAAb;AACH,ACVL,AJIQC,IAAAA,MAAM,EAAC;AGOd,AHXM,CGEP,EHH0B;AIE1B,AJKI4D,EAAAA,EENSK,ADAAH,IDMH,EAAC;AICX,AJAQJ,IIAJoB,AJAIpB,GIAD,GAAGqB,IJAQ,EAAC,CIAF,CAAC,EJDP,QICM,CAAjB;AACA,AJAQpB,ADTR,ICSQA,WAAW,EAAC,IAFT;AELP,ADAA,ADQI5D,IAAAA,ADRKD,MCQC,EAAC,EAHJ,MCLM,ICAD8C,MAAZ,EAAmB;AAAA,ADAN,ADST5C,IAAAA,MAAM,EAAC;AAJJ,GAPe,sBIYoBwD,uBAAWK;AFTjDK,ADAA,ADUJL,ADVA,ECUAA,EIDCH,AFTGQ,IFUE,CCVGpB,CDUF,EEVK,CAACqB,ADAT,GAAY,IFAJpE,EEAR,IFAJ,EAAmBC,CGAf,CAA0B,IHA9B,EKSC0D,ALTyBzD,GGAtB,EAAoC,UAASmE,IHAjD,CGAwC,CHAM,CGAS;AAC/C,ADAJ,ADUAV,ADX0C,IKSjCC,AJETD,KCVKK,KCAMK,AFUD,CCVV,CDUW,ECVG,CCAE,AFSb,CETcC,CDAjB,MCAI,UEQKV;AFPD,ADAR,ADUAA,IIHqB5D,AJGrB4D,KCVKV,ICAQ,EAAL,ADAR,ADUW,EAAC,CCVE,EDQX,GCRH,SGOqBlD;AFNT6C,ADAZ,ADUA7C,ADZA,IKQ4BC,AJI5BD,IDZIG,CEECiD,CCAOP,AFUN,EAAC,CDZE,CCSN,EEPe,AHFN,CGEOM,ADAnB,GAAgB,CAAhB,AFFiB/C,CGEL,CAAa8B,CAAb,GAAiB,CAAC,CAAlB,EHFA,CKQgBjC,ALRAD,MAAhB,EAAuBC,MAAvB,EAA8BC,mBAA9B,CAAZ;AKSR,AFNoB,ADAZ,ADUAD,IIJJgF,AJIIhF,KCVKkD,CDUC,EIJF,AJIG,ECVP,CGMO,EHNM,EGMFpD,kBAAJ,CAAaC,MAAb,EAAoBC,MAApB,EAA2B;AAACM,AHL/B0D,ADKD,ADT4D,EKS5B1D,IHL/B0D,EFJ8D9D,CKSxB,EAAC,CHLjC,CFJ6D,CEI5D,CGKuB,EHNrB,CFH8D,MAAZ,EAAmB;AKSlCK,AFLxC,ADCJ0B,ADTc,ADIiE7B,CCJpF,CIaiDG,IHJ5C0B,AFL+E7B,CEK9E,EAAC,CAFO,EGM6C,CFL7C,AHJ6E,CKS/B,ALTgCC,CGInF,EEK0B,ALTiD,CAAYH,KAAZ;AKSpBM,AFJnDoC,ADCRV,AFNkG,EKSvC1B,GLTA,CEM3D0B,CAAC,EAAC,CCDMU,CHL8F,KKS7B,AFJ3D,CAACM,CEI2D,GAA5C,CFJtB,CAAahB,CAAb,GAAiB,CAAC,CAAlB;AEIsEzB,AFHtE,ADHC,AFFT,EKQ8EA,GHNlF,MFFSV,KKQuF,CLR5F,CKQ6F,ELR/EA,MAAd;AKQ8B,AHDlC,AFNI,CKOG,CAAf,OHDa8C,EFNI7C,MEMT,AFNI,GEMY,AFNEA,MAAd;AKQZyE,AFHgB,ADEJxC,MGCN,AHDMA,CGCLW,AHDM,EAAG,CADQ,GGExB,AFHqB,EAAL,CEGA,IAAIkB,cAAJ,CAAWmB,GAAX,CAAhB;AACAD,AFHoBpC,ADERV,AFPA,MEOAA,CAAC,CGCL,CAACgD,AHDO,CCFItC,AHLL3C,MGKW,CAACiD,KAAP,CEGpB,AFHiCjB,CEGTW,AFHJ,GAAiB,CAAjB,CHLc,CKQlC,ALRmCtC,OAAvB,EAA+B;AKU3CmE,AFJoB,ADDI,AFLoB,KEKpC,CGKF,CAACU,KAAP,CLViD7E,EKUlC,IAAI2D,CLVyB,GAAehE,eKU5C,CAAiB2C,GLV8C,CAACtC,EKUhE,CAAf,ILV4C;AKY5C,AHHK,AFTkF,IKYjF2E,GAAG,ALZG,GKYAtB,GLZ+E,QKYpE,GAAC3D,MAAxB;AACA,AFNgB,AHP4E,aGOvE,AHP4EM,EGOjF,KHP4E,GAAa,GAAb;AGQxEsC,AHRyF,UGQzFA,MAAM,CAACM,KAAP,CAAahB,CAAb,GAAiB,CAAjB;AEQpB,AFPoB,IEOhBkD,MAAM,GAAGlB,QAAQ,CAACmB,cAAT,CAAwB,YAAxB,CAAb;AACA,AFpBY,AHIA,IKgBRjC,GAAG,GAAGgC,ALhBKnF,MKgBC,CAACqF,QHPRtC,EGOC,CAAkB,CLhBM,CAACzC,EKgBzB,CAAV,GHPmB,IFTP,EAAkC;AKkB9C6E,AFRS,ADAD,AFVuC,KGLvC,CEuBF,CAACR,GHRI5B,EGQX,CAAa6B,ALlBuCtE,MEUhC,GAAG,CFVwB,GAAkBN,CEUrCkD,CGQ5B,GAA+B,IHRpB,GAA4B,KAAKD,EFVwC,CAAC3C,EEU9C,CAAWyD,IGQlD,EHRQ,CFVuC,CEUU;AGSzDoB,AFRQlB,ADAI,AFXoF,IGWxFA,EEQF,CAACqB,ALnBK,KGWI,CAACpB,ADAAlB,AFXmF,MKmBpG,AHRY,CGQQ,EHRM,KGQ1B,AHRY,EGQgBS,AFRpB,CAA0B,OAA1B,EEQR,AFR0C,UAASY,CAAT,EAAW;AESrDc,AFRYxC,ADAH,AFZ4F,MKoB/F,AFRMA,CEQL2C,KFRW,CAACrC,AHZuF3C,KGY9F,CEQZ,AFRyB0B,CEQL,AFRR,GAAiB,AHZwE,CGYzF,EHZyG,CAAhB,CKoBrG,EAA6B0B,WAA7B;AAGA,AFVYf,ADAP,AFbkH,MGa3GA,MAAM,CAACM,KAAP,CAAahB,CAAb,GAAiB,CAAjB;AACH,KAHD;AEaR,AFTK,AHdO,IKuBRsD,MLvBWvF,EKuBH,GAAG,CAAf,aLvBkC,CAACO,cAAvB,EAAsC;AAAC,aAAKA,cAAL,GAAsBP,mBAAmB,CAACO,cAA1C;AKyBnD,ALzB4G,OAAhG,EKyBHiF,ILzBuG,IKyBhH,CAAkBzC,SAAlB,EAA4B;AAExB,AL3B6G,MK2BzGD,OL3B8GvC,EK2BrG,GAAGwC,SAAS,AL3BoF,GK2BjFwC,AL3BqG,CAA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","file":"game.js","sourceRoot":"..\\public\\src","sourcesContent":["// Trocar forearch por for; calcular novos blocos somente nas extremidades (remover blocos antigos)\r\n\r\nexport class Scenario {\r\n    constructor(size_x,size_y,optional_parameters){\r\n        let check = this.checkInput(size_x,size_y,optional_parameters);if(check !=='TRUE'){console.log(check)}else{\r\n            this.size_x = size_x\r\n            this.size_y = size_y\r\n            if(optional_parameters.density){this.density = optional_parameters.density}else{this.density=0.2}\r\n            if(optional_parameters.dispersion){this.dispersion = optional_parameters.dispersion}else{this.dispersion=1}\r\n            if(optional_parameters.maxPropagation){this.maxPropagation = optional_parameters.maxPropagation}else{this.maxPropagation=1}\r\n            if(optional_parameters.minPropagation){this.minPropagation = optional_parameters.minPropagation}else{this.minPropagation=0.25}\r\n        }\r\n\r\n        this.size = size_x*size_y\r\n        this.maxBlocks = Math.round(this.size*this.density)\r\n\r\n        this.seedBlocksDensity = this.density*this.dispersion\r\n        this.seedBlocks = 0\r\n        this.blockLocations = []\r\n        this.blocks = 0\r\n        this.gridMap\r\n\r\n        this._generateMap()\r\n    }\r\n\r\n    checkInput(size_x,size_y,optional_parameters) {\r\n        if(typeof size_x === 'number' & typeof size_y === 'number' & typeof optional_parameters === 'object'){\r\n            if (size_x > 0 & size_y > 0){\r\n                if (size_x % 1 === 0 & size_y % 1 === 0) {\r\n                    return('TRUE')\r\n                } else {\r\n                    return('Must use integers: size_x and size_y!')\r\n                }\r\n            } else {\r\n                return('Must be Greater than zero: size_x and size_y!')\r\n            }\r\n        } else {\r\n            return('size_x and size_y Must be Natural Numbers and optional_parameters Must be an object. received '+ JSON.stringify({\r\n                size_x:typeof size_x,\r\n                size_y:typeof size_y,\r\n                optional_parameters:typeof optional_parameters\r\n            }))\r\n        }\r\n    }\r\n\r\n    _generateSeedMap(){\r\n        \r\n        let blankMap = new Array(this.size_x).fill(new Array(this.size_y).fill(0))\r\n\r\n        if (this.seedBlocksDensity > 0) {\r\n            while (this.blocks === 0){\r\n                this.gridMap = blankMap.map((row,row_index)=>{\r\n                    return(row.map((col,col_index)=>{\r\n                        let rand = Math.random()\r\n                        if(rand > this.seedBlocksDensity){\r\n                            return(0)\r\n                        } else {\r\n                            this.seedBlocks++\r\n                            this.blockLocations.push({x:row_index,y:col_index})\r\n                            return(1)\r\n                        }\r\n                    }))\r\n                })\r\n                this.blocks = this.blockLocations.length\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    _generateMap(){\r\n        this._generateSeedMap()\r\n\r\n        if(this.seedBlocks > 0){\r\n\r\n            while(this.blocks < this.maxBlocks){\r\n                \r\n                let propagation = Math.min(\r\n                    this.maxPropagation,\r\n                    Math.max(\r\n                        (this.maxBlocks - this.blocks)/(4*this.blocks),\r\n                        this.minPropagation\r\n                    )\r\n                )\r\n                \r\n                // console.log(propagation)\r\n                this.blockLocations.forEach(location =>{\r\n                    let neighboors = [{x:location.x,y:location.y+1},\r\n                                    {x:location.x+1,y:location.y},\r\n                                    {x:location.x,y:location.y-1},\r\n                                    {x:location.x-1,y:location.y}]\r\n                    neighboors.forEach(element => {\r\n                        if(element.x >= 0 & element.x < this.size_x & element.y >= 0 & element.y < this.size_y) {\r\n                            if(this.gridMap[element.x][element.y] === 0) {\r\n                                if(Math.random() < propagation) {\r\n                                    this.gridMap[element.x][element.y] = 1\r\n                                    this.blockLocations.push({x:element.x,y:element.y})\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n                this.blocks = this.blockLocations.length\r\n            }\r\n        }\r\n    }\r\n\r\n    positionPlayer(player){\r\n        player.position.x = Math.round(this.size_x/2-1)\r\n        player.position.y = Math.round(this.size_y/2-1)\r\n        this.gridMap[player.position.x][player.position.y] = player.code\r\n    }\r\n\r\n    movePlayer(player,deltaTime,timestamp){\r\n\r\n        if (deltaTime !== 0 && player.moving === false){\r\n\r\n            if( player.position.x + player.speed.x < this.size_x &&\r\n                player.position.x + player.speed.x >= 0 &&\r\n                player.position.y + player.speed.y < this.size_y &&\r\n                player.position.y + player.speed.y >= 0\r\n                ){\r\n                if (this.gridMap[player.position.x+player.speed.x][player.position.y+player.speed.y]===0){\r\n                    this.gridMap[player.position.x][player.position.y] = 0\r\n                    this.gridMap[player.position.x+player.speed.x][player.position.y+player.speed.y] = player.code\r\n\r\n                    player.position.x = player.position.x + player.speed.x\r\n                    player.position.y = player.position.y + player.speed.y\r\n                    player.moving = true\r\n                    player.lastMove = timestamp\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(ctx,size_x,size_y,grid_element_size){\r\n\r\n        for(let x=0;x<size_x;x++){\r\n            for (let y=0;y<size_y;y++){\r\n                if (this.gridMap[x][y]===1){\r\n                    ctx.fillStyle = 'rgb(64,64,64)'\r\n                    ctx.fillRect(\r\n                        grid_element_size*x,\r\n                        grid_element_size*y,\r\n                        grid_element_size,\r\n                        grid_element_size);\r\n                } else if (this.gridMap[x][y]===100101) {\r\n                    ctx.fillStyle = 'rgb(64,64,128)'\r\n                    ctx.fillRect(\r\n                        grid_element_size*x,\r\n                        grid_element_size*y,\r\n                        grid_element_size,\r\n                        grid_element_size);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","export const resolution = {\r\n    HD:{\r\n        GAME_WIDTH:1200,\r\n        GAME_HEIGHT:720,\r\n        size_x:15,\r\n        size_y:9\r\n    },\r\n    FULLHD:{\r\n        GAME_WIDTH:1920,\r\n        GAME_HEIGHT:1080,\r\n        size_x:16,\r\n        size_y:9\r\n    },\r\n    SQUARE:{\r\n        GAME_WIDTH:286,\r\n        GAME_HEIGHT:286,\r\n        size_x:16,\r\n        size_y:16\r\n    }\r\n}","\r\nexport class Player {\r\n    constructor(){\r\n        this.code = 100101\r\n        this.health = 100\r\n        this.moving = false\r\n        this.lastMove = 0\r\n        this.speed = {\r\n            module:200,\r\n            x:0,\r\n            y:0\r\n        }\r\n        this.position = {\r\n            x : 0,\r\n            y : 0\r\n        }\r\n    }\r\n    move(timestamp){\r\n        if(timestamp - this.lastMove > this.speed.module){\r\n            this.moving = false\r\n        }\r\n    }\r\n}","\r\nexport class InputHandler{\r\n    constructor(player){\r\n        document.addEventListener('keydown',function(event){\r\n            switch(event.keyCode) {\r\n                case 37:\r\n                    player.speed.x = -1\r\n                    break\r\n                case 38:\r\n                    player.speed.y = -1\r\n                    break\r\n                case 39:\r\n                    player.speed.x = 1\r\n                    break\r\n                case 40:\r\n                    player.speed.y = 1\r\n                    break\r\n            }\r\n        })\r\n        document.addEventListener('keyup',function(e){\r\n            player.speed.x = 0\r\n            player.speed.y = 0\r\n        })\r\n    }\r\n    buttonDirection(direction) {\r\n        switch(direction) {\r\n            case \"LEFT\":\r\n                player.speed.x = -1\r\n                break\r\n            case \"UP\":\r\n                player.speed.y = -1\r\n                break\r\n            case \"RIGHT\":\r\n                player.speed.x = 1\r\n                break\r\n            case \"DOWN\":\r\n                player.speed.y = 1\r\n                break\r\n        }\r\n    }\r\n    buttonRelease(){\r\n        player.speed.x = 0\r\n        player.speed.y = 0\r\n    }\r\n}","\r\nlet gamePaused = false;\r\n\r\nwindow.pause = function () {\r\n    var x = document.getElementsByClassName(\"play-pause\")[0];\r\n    if (gamePaused === true) {\r\n        x.style.backgroundColor = \"#07070700\"\r\n        gamePaused = false\r\n    } else {\r\n        x.style.backgroundColor = \"#07070780\"\r\n        gamePaused = true\r\n    }\r\n}","// Contains the game logic\r\n// Only called for the play page\r\n/*---------------------------------- ----------------------------------*/\r\nimport { Scenario } from './scenario'\r\nimport { resolution } from './resolution'\r\nimport { Player } from './player'\r\nimport { InputHandler } from './input'\r\n\r\nvar dom = require('./dom.js')\r\n/*---------------------------------- ----------------------------------*/\r\n\r\n\r\nlet {GAME_WIDTH, GAME_HEIGHT,size_x,size_y} = resolution.SQUARE\r\nlet scenario = new Scenario(size_x,size_y,{density:0.15,dispersion:0.2,maxPropagation:0.5,minPropagation:0.05})\r\nwindow.player = new Player(sqm)\r\nscenario.positionPlayer(player)\r\n\r\nwindow.input = new InputHandler(player)\r\n\r\nconst sqm = GAME_HEIGHT/size_y\r\n/*---------------------------------- ----------------------------------*/\r\n\r\n\r\nlet canvas = document.getElementById('gameScreen');\r\nlet ctx = canvas.getContext('2d');\r\n\r\ncanvas.style.backgroundColor = 'rgba(200,200,50,0.5)'\r\ncanvas.setAttribute('width',GAME_WIDTH)\r\ncanvas.setAttribute('height',GAME_HEIGHT)\r\n\r\n\r\n/*---------------------------------- ----------------------------------*/\r\nlet lastTime = 0\r\n\r\nfunction gameLoop(timestamp){\r\n\r\n    let deltaTime = timestamp - lastTime\r\n\r\n    lastTime = timestamp\r\n\r\n    ctx.clearRect(0,0,GAME_WIDTH,GAME_HEIGHT)\r\n\r\n    scenario.movePlayer(player,deltaTime,timestamp)\r\n    player.move(timestamp)\r\n    \r\n    scenario.draw(ctx,size_x,size_y,sqm)\r\n\r\n    requestAnimationFrame(gameLoop)\r\n}\r\n\r\ngameLoop(0)"]}